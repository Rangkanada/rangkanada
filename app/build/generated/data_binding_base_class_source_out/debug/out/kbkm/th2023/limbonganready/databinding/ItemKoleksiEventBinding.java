// Generated by view binder compiler. Do not edit!
package kbkm.th2023.limbonganready.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import kbkm.th2023.limbonganready.R;

public final class ItemKoleksiEventBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btKol1;

  @NonNull
  public final ImageView gambarEvent;

  @NonNull
  public final ImageButton gambarTombolHapus;

  @NonNull
  public final TextView namaEvent;

  @NonNull
  public final TextView tanggalEvent;

  private ItemKoleksiEventBinding(@NonNull CardView rootView, @NonNull Button btKol1,
      @NonNull ImageView gambarEvent, @NonNull ImageButton gambarTombolHapus,
      @NonNull TextView namaEvent, @NonNull TextView tanggalEvent) {
    this.rootView = rootView;
    this.btKol1 = btKol1;
    this.gambarEvent = gambarEvent;
    this.gambarTombolHapus = gambarTombolHapus;
    this.namaEvent = namaEvent;
    this.tanggalEvent = tanggalEvent;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemKoleksiEventBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemKoleksiEventBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_koleksi_event, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemKoleksiEventBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btKol1;
      Button btKol1 = ViewBindings.findChildViewById(rootView, id);
      if (btKol1 == null) {
        break missingId;
      }

      id = R.id.gambarEvent;
      ImageView gambarEvent = ViewBindings.findChildViewById(rootView, id);
      if (gambarEvent == null) {
        break missingId;
      }

      id = R.id.gambarTombolHapus;
      ImageButton gambarTombolHapus = ViewBindings.findChildViewById(rootView, id);
      if (gambarTombolHapus == null) {
        break missingId;
      }

      id = R.id.namaEvent;
      TextView namaEvent = ViewBindings.findChildViewById(rootView, id);
      if (namaEvent == null) {
        break missingId;
      }

      id = R.id.tanggalEvent;
      TextView tanggalEvent = ViewBindings.findChildViewById(rootView, id);
      if (tanggalEvent == null) {
        break missingId;
      }

      return new ItemKoleksiEventBinding((CardView) rootView, btKol1, gambarEvent,
          gambarTombolHapus, namaEvent, tanggalEvent);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
